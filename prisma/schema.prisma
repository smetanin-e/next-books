//генерируем схему, которую мы будем применять для javaScript
generator client {
    provider = "prisma-client-js"
}

//объясняем призме с какой бд необходимо работать
datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

//описываем таблицы
model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String   @unique
    password String
    role     UserRole @default(USER)
    verified DateTime

    provider   String?
    providerId String?

    cart             Cart?
    orders           Order[]
    verificationCode VerificationCode?

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model Category {
    id   Int    @id @default(autoincrement())
    name String @unique

    subcategories SubCategory[]

    books Book[]
}

model SubCategory {
    id   Int    @id @default(autoincrement())
    name String @unique

    categoryId Int
    category   Category @relation(fields: [categoryId], references: [id])

    books Book[]
}

model Tag {
    id   Int    @id @default(autoincrement())
    name String @unique

    books Book[]
}

model Book {
    id          Int    @id @default(autoincrement())
    imageUrl    String
    title       String
    description String
    author      String
    price       Int
    rating      Float
    sale        Int?

    ratings Rating[]

    tags Tag[]

    subcategoryId Int
    subcategory   SubCategory @relation(fields: [subcategoryId], references: [id])

    categoryId Int
    category   Category @relation(fields: [categoryId], references: [id])

    cartItem CartItem[]
}

model Rating {
    id Int @id @default(autoincrement())

    ratingValue Int
    count       Int @default(0)

    bookId Int
    book   Book @relation(fields: [bookId], references: [id])

    @@index([bookId])
    @@map("ratings")
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    token String

    totalAmount Int @default(0)

    cartItems CartItem[]

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    bookId Int?
    book   Book? @relation(fields: [bookId], references: [id])

    quantity Int

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    userId Int?
    user   User? @relation(fields: [userId], references: [id])

    token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullname String
    email    String
    phone    String
    address  String
    comment  String

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    userId Int   @unique
    user   User? @relation(fields: [userId], references: [id])

    code String @unique

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCESSED
    CANCELED
}

enum UserRole {
    USER
    ADMIN
}
